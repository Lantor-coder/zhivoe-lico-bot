import os
import hmac
import hashlib
import json
from urllib.parse import urlencode
from aiohttp import web
from aiogram import Bot, Dispatcher, types
from aiogram.filters import CommandStart
from aiogram.enums import ParseMode
from aiogram.client.default import DefaultBotProperties
from aiogram.webhook.aiohttp_server import SimpleRequestHandler, setup_application

# === –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è ===
BOT_TOKEN = os.getenv("BOT_TOKEN")
PRODAMUS_SECRET = os.getenv("PRODAMUS_SECRET")  # ‚ö†Ô∏è —É–±–µ–¥–∏—Å—å, —á—Ç–æ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –∏–º–µ–Ω–Ω–æ —Ç–∞–∫ –Ω–∞–∑–≤–∞–Ω–∞ –≤ Render
BASE_URL = "https://nastroikatela.payform.ru/"
WEBHOOK_URL = "https://zhivoe-lico-bot-1.onrender.com/webhook"
PRICE = 4500  # —Å—Ç–æ–∏–º–æ—Å—Ç—å –∫—É—Ä—Å–∞

bot = Bot(token=BOT_TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))
dp = Dispatcher()


# === –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–ª–∞—Ç—ë–∂–Ω–æ–π —Å—Å—ã–ª–∫–∏ (HMAC-–ø–æ–¥–ø–∏—Å–∞–Ω–Ω–∞—è) ===
def create_invoice(tg_id: int) -> str:
    """–°–æ–∑–¥–∞—ë—Ç HMAC-–ø–æ–¥–ø–∏—Å–∞–Ω–Ω—É—é —Å—Å—ã–ª–∫—É Prodamus"""
    data = {
        "do": "pay",
        "order_id": str(tg_id),
        "urlSuccess": "https://t.me/nastroika_tela",
        "urlReturn": "https://t.me/nastroika_tela",
        "urlNotification": "https://zhivoe-lico-bot-1.onrender.com/access",
        "npd_income_type": "FROM_INDIVIDUAL",
        "customer_extra": "–û–ø–ª–∞—Ç–∞ –∫—É—Ä—Å–∞ '–ñ–∏–≤–æ–µ –ª–∏—Ü–æ'",
        "products": [
            {
                "name": "–û–Ω–ª–∞–π–Ω-–∫—É—Ä—Å '–ñ–∏–≤–æ–µ –ª–∏—Ü–æ'",
                "price": PRICE,
                "quantity": 1
            }
        ]
    }

    # === –§–æ—Ä–º–∏—Ä—É–µ–º JSON –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤, –∫–∞–∫ —Ç—Ä–µ–±—É–µ—Ç HMAC-–∞–ª–≥–æ—Ä–∏—Ç–º ===
    json_data = json.dumps(data, ensure_ascii=False, separators=(",", ":"))

    # === –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å–µ–∫—Ä–µ—Ç–Ω—ã–º –∫–ª—é—á–æ–º SHA256 ===
    signature = hmac.new(
        PRODAMUS_SECRET.encode("utf-8"),
        msg=json_data.encode("utf-8"),
        digestmod=hashlib.sha256
    ).hexdigest()

    # === –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥–ø–∏—Å—å –≤ –æ–±—ä–µ–∫—Ç ===
    data["signature"] = signature

    # === –ö–æ–¥–∏—Ä—É–µ–º JSON –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä "data" ===
    query = urlencode({"data": json.dumps(data, ensure_ascii=False)}, doseq=True)
    return f"{BASE_URL}?{query}"


# === –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start ===
@dp.message(CommandStart())
async def start_cmd(message: types.Message):
    pay_link = create_invoice(message.from_user.id)
    text = (
        "–ü—Ä–∏–≤–µ—Ç üåø\n\n"
        "–Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –æ–ø–ª–∞—Ç–∏—Ç—å –∏ –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –æ–Ω–ª–∞–π–Ω-–∫—É—Ä—Å—É –ê–Ω—Ç–æ–Ω–∏—è –õ–∞–Ω–∏–Ω–∞ ¬´–ñ–∏–≤–æ–µ –ª–∏—Ü–æ¬ª.\n\n"
        f"üëâ <a href='{pay_link}'>–û–ø–ª–∞—Ç–∏—Ç—å –∫—É—Ä—Å</a>\n\n"
        "–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –±–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏—à–ª—ë—Ç —Å—Å—ã–ª–∫—É –Ω–∞ –∑–∞–∫—Ä—ã—Ç—ã–π –∫–∞–Ω–∞–ª üí´"
    )
    await message.answer(text, disable_web_page_preview=True)


# === Webhook –æ—Ç Prodamus (—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø–ª–∞—Ç–µ–∂–µ) ===
async def handle_access(request: web.Request):
    try:
        data = await request.json()
        order_id = data.get("order_id")
        payment_status = data.get("status")

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã
        if payment_status == "success" and order_id:
            chat_id = int(order_id)
            await bot.send_message(
                chat_id,
                "‚úÖ –û–ø–ª–∞—Ç–∞ –ø–æ–ª—É—á–µ–Ω–∞!\n\n"
                "–í–æ—Ç —Å—Å—ã–ª–∫–∞ –Ω–∞ –∑–∞–∫—Ä—ã—Ç—ã–π Telegram-–∫–∞–Ω–∞–ª:\n"
                "üëâ https://t.me/+YourPrivateChannelInviteLink"
            )
        return web.Response(status=200)
    except Exception as e:
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:", e)
        return web.Response(status=500)


# === –£—Å—Ç–∞–Ω–æ–≤–∫–∞ webhook ===
async def on_startup(app: web.Application):
    await bot.delete_webhook(drop_pending_updates=True)
    await bot.set_webhook(WEBHOOK_URL)
    print(f"‚úÖ Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {WEBHOOK_URL}")


# === –ù–∞—Å—Ç—Ä–æ–π–∫–∞ aiohttp-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è ===
def setup_app() -> web.Application:
    app = web.Application()
    app.router.add_post("/access", handle_access)

    webhook_handler = SimpleRequestHandler(dispatcher=dp, bot=bot)
    webhook_handler.register(app, path="/webhook")

    setup_application(app, dp, bot=bot)
    app.on_startup.append(on_startup)
    return app


# === –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ ===
if __name__ == "__main__":
    app = setup_app()
    web.run_app(app, host="0.0.0.0", port=int(os.getenv("PORT", 10000)))
